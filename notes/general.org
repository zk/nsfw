<2011-02-03 Thu 15:44>

Where does validation go?

Where does the logic for maintaining data integrity (i.e. not
inserting duplicate records) go?



Basic directory structure

/<prj-name>/boot.clj
/<prj-name>/dev.clj
/<prj-name>/routes.clj
/<prj-name>/actions.clj
/<prj-name>/templates.clj
/<prj-name>/state.clj
/<prj-name>/<mod-name>/routes.clj
/<prj-name>/<mod-name>/actions.clj
/<prj-name>/<mod-name>/template.clj





<2011-10-16 Sun 16:47>

* Template Dependencies

Need a way to define dependencies (html, css, javascript) locally, and
have them bubble up to the top level:

#+BEGIN_SRC
{:html 
#+END_SRC

** HTML
Options:
+ hiccup format [:div {:class "foo"}], etc.
  + Allows for easier instrospection (has html? has etc).
+ String
  + More difficult, need to use string manipulation to insert.

Going with hiccup format for now.


* Ordering

Asset ordering (order of css, javascript) matters.  How am I going to
handle this?

I'd like to provide 

* Escaping

Have to provide a way to 'escape' templates, meaning that js and css
tags aren't pulled out of source.

+ [:link {:rel "stylesheet" :href "foo.css" :escape true]
+ Require each template be wrapped in a top-level structure denoting a
  template: 
  - {:template [:link {:rel "stylesheet" :href "foo.css"]
     :escape true}

I kind of like the first one, but the template marker will be passed
on to the rendered html.  Or not... Pull it from the structure on
parsing!




